// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication1.Data.DataContext;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250930133520_InitOne")]
    partial class InitOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Population")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Tashkent",
                            Population = 3000000
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Samarkand",
                            Population = 585000
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Dushanbe",
                            Population = 1000000
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            Name = "Khujand",
                            Population = 144000
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 3,
                            Name = "Almaty",
                            Population = 2000000
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 3,
                            Name = "Astana",
                            Population = 1300000
                        });
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Uzbekistan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tajikistan"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kazakhstan"
                        });
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            CityId = 1,
                            Name = "Ali"
                        },
                        new
                        {
                            Id = 2,
                            Age = 30,
                            CityId = 1,
                            Name = "Dilnoza"
                        },
                        new
                        {
                            Id = 3,
                            Age = 28,
                            CityId = 2,
                            Name = "Javlon"
                        },
                        new
                        {
                            Id = 4,
                            Age = 22,
                            CityId = 3,
                            Name = "Farzona"
                        },
                        new
                        {
                            Id = 5,
                            Age = 35,
                            CityId = 3,
                            Name = "Rustam"
                        },
                        new
                        {
                            Id = 6,
                            Age = 27,
                            CityId = 4,
                            Name = "Shahnoza"
                        },
                        new
                        {
                            Id = 7,
                            Age = 40,
                            CityId = 5,
                            Name = "Yerlan"
                        },
                        new
                        {
                            Id = 8,
                            Age = 29,
                            CityId = 5,
                            Name = "Aruzhan"
                        },
                        new
                        {
                            Id = 9,
                            Age = 33,
                            CityId = 6,
                            Name = "Nursultan"
                        },
                        new
                        {
                            Id = 10,
                            Age = 26,
                            CityId = 6,
                            Name = "Dana"
                        });
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.City", b =>
                {
                    b.HasOne("WebApplication1.Data.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.Person", b =>
                {
                    b.HasOne("WebApplication1.Data.Entities.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.City", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("WebApplication1.Data.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
